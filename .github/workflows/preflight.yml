name: Preflight
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  #=========== THE MOVIE DATABASE CONFIG ===========#
  TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}

  #=========== NEXT-AUTH CONFIG ===========#
  ## NEXTAUTH_URL is not necessary in production env deployed on Vercel
  # NEXTAUTH_URL=${LOCAL_URL}
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
  AUTH_REDIRECT_PROXY_URL: ${{ secrets.AUTH_REDIRECT_PROXY_URL }}

  # NEXT-AUTH GITHUB PROVIDER CONFIG
  NEXTAUTH_GITHUB_ID: ${{ secrets.NEXTAUTH_GITHUB_ID }}
  NEXTAUTH_GITHUB_SECRET: ${{ secrets.NEXTAUTH_GITHUB_SECRET }}

  # NEXT-AUTH TWITCH PROVIDER CONFIG
  TWITCH_ID: ${{ secrets.TWITCH_ID }}
  TWITCH_SECRET: ${{ secrets.TWITCH_SECRET }}

  # NEXT-AUTH EMAIL PROVIDER CONFIG
  EMAIL_SERVER_USER: ${{ secrets.EMAIL_SERVER_USER }}
  EMAIL_SERVER_PASSWORD: ${{ secrets.EMAIL_SERVER_PASSWORD }}
  EMAIL_SERVER_HOST: ${{ secrets.EMAIL_SERVER_HOST }}
  EMAIL_SERVER_PORT: ${{ secrets.EMAIL_SERVER_PORT }}
  EMAIL_FROM: ${{ secrets.EMAIL_FROM }}

  #=========== MONGODB CONFIG ===========#
  MONGODB_URI: ${{ secrets.MONGODB_URI }}

  #=========== TEST CONFIG ==============#
  TEST_MAIL: ${{ secrets.TEST_MAIL }}
  TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}

  # to tell nextjs to automatically push this client side, we prefix the key with NEXT_PUBLIC
  # @see https://nextjs.org/docs/app/building-your-application/configuring/environment-variables
  # NEXT_PUBLIC_LOCAL_URL=${LOCAL_URL}
  NEXT_PUBLIC_LOCAL_URL: 'http://127.0.0.1:3000'
  LOCAL_URL: 'http://127.0.0.1:3000'
on:
  push:
    branches:
      - main
jobs:
  Install-Start-Test:
    runs-on: ubuntu-latest
    environment: Dev
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Create env file
        run: |
          touch .env.local
          echo TMDB_API_KEY=${{ secrets.TMDB_API_KEY }} >> .env.local
          echo NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} >> .env.local
          echo AUTH_REDIRECT_PROXY_URL=${{ secrets.AUTH_REDIRECT_PROXY_URL }} >> .env.local
          echo NEXTAUTH_GITHUB_ID=${{ secrets.NEXTAUTH_GITHUB_ID }} >> .env.local
          echo NEXTAUTH_GITHUB_SECRET=${{ secrets.NEXTAUTH_GITHUB_SECRET }} >> .env.local
          echo TWITCH_ID=${{ secrets.TWITCH_ID }} >> .env.local
          echo TWITCH_SECRET=${{ secrets.TWITCH_SECRET }} >> .env.local
          echo EMAIL_SERVER_USER=${{ secrets.EMAIL_SERVER_USER }} >> .env.local
          echo EMAIL_SERVER_PASSWORD=${{ secrets.EMAIL_SERVER_PASSWORD }} >> .env.local
          echo EMAIL_SERVER_HOST=${{ secrets.EMAIL_SERVER_HOST }} >> .env.local
          echo EMAIL_SERVER_PORT=${{ secrets.EMAIL_SERVER_PORT }} >> .env.local
          echo EMAIL_FROM=${{ secrets.EMAIL_FROM }} >> .env.local
          echo MONGODB_URI=${{ secrets.MONGODB_URI }} >> .env.local
          echo TEST_MAIL=${{ secrets.TEST_MAIL }} >> .env.local
          echo TEST_PASSWORD=${{ secrets.TEST_PASSWORD }} >> .env.local
          cat .env.local
      - name: Install dependencies
        run: npm ci
      - name: Check linting
        run: npm run lint
      - name: Build
        run: npm run build
      - name: Create config files for mail-tester
        run: |
          mkdir -p mail-tester/
          echo ${{secrets.TEST_CREDENTIALS}} | base64 -d > mail-tester/credentials.json
          echo ${{secrets.TEST_TOKEN}} | base64 -d > mail-tester/token.json
      - name: Drop DB
        run: node scripts/dropDatabase.js
      - name: Cypress run
        # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v6
        with:
          # Starts web server for E2E tests - replace with your own server invocation
          # https://docs.cypress.io/guides/continuous-integration/introduction#Boot-your-server
          start: npm start
          wait-on: ${{ env.LOCAL_URL }} # Waits for above
          # Records to Cypress Cloud
          # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
          record: true
          parallel: true # Runs test in parallel using settings above
        env:
          # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
          # in GitHub repo → Settings → Secrets → Actions
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
