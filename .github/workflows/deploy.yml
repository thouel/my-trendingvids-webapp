name: Vercel Production Deployment
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  #=========== THE MOVIE DATABASE CONFIG ===========#
  TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}

  #=========== NEXT-AUTH CONFIG ===========#
  ## NEXTAUTH_URL is not necessary in production env deployed on Vercel
  # NEXTAUTH_URL=${LOCAL_URL}
  NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
  AUTH_REDIRECT_PROXY_URL: ${{ secrets.AUTH_REDIRECT_PROXY_URL }}

  # NEXT-AUTH GITHUB PROVIDER CONFIG
  NEXTAUTH_GITHUB_ID: ${{ secrets.NEXTAUTH_GITHUB_ID }}
  NEXTAUTH_GITHUB_SECRET: ${{ secrets.NEXTAUTH_GITHUB_SECRET }}

  # NEXT-AUTH TWITCH PROVIDER CONFIG
  TWITCH_ID: ${{ secrets.TWITCH_ID }}
  TWITCH_SECRET: ${{ secrets.TWITCH_SECRET }}

  # NEXT-AUTH EMAIL PROVIDER CONFIG
  EMAIL_SERVER_USER: ${{ secrets.EMAIL_SERVER_USER }}
  EMAIL_SERVER_PASSWORD: ${{ secrets.EMAIL_SERVER_PASSWORD }}
  EMAIL_SERVER_HOST: ${{ secrets.EMAIL_SERVER_HOST }}
  EMAIL_SERVER_PORT: ${{ secrets.EMAIL_SERVER_PORT }}
  EMAIL_FROM: ${{ secrets.EMAIL_FROM }}

  # TEST CONFIG
  TEST_MAIL: ${{ secrets.TEST_MAIL }}
  TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}

  # to tell nextjs to automatically push this client side, we prefix the key with NEXT_PUBLIC
  # @see https://nextjs.org/docs/app/building-your-application/configuring/environment-variables
  # NEXT_PUBLIC_LOCAL_URL=${LOCAL_URL}
  NEXT_PUBLIC_LOCAL_URL: 'https://my-trendingvids-webapp.vercel.app'
  LOCAL_URL: 'https://my-trendingvids-webapp.vercel.app'
on:
  workflow_run:
    workflows: [Preflight]
    types: [completed]
jobs:
  on-failure:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - run: echo 'The triggering workflow failed'
  on-success:
    runs-on: ubuntu-latest
    environment: Production
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - run: echo 'The triggering workflow passed'
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install Vercel CLI
        run: npm install --global vercel@canary

      - name: Remove environment variable to Vercel
        continue-on-error: true
        run: |
          vercel env rm TMDB_API_KEY production --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm NEXTAUTH_SECRET production --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm AUTH_REDIRECT_PROXY_URL production --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm NEXTAUTH_GITHUB_ID production --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm NEXTAUTH_GITHUB_SECRET production --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm TWITCH_ID production --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm TWITCH_SECRET production --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm EMAIL_SERVER_USER production --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm EMAIL_SERVER_PASSWORD production --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm EMAIL_SERVER_HOST production --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm EMAIL_SERVER_PORT production --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm EMAIL_FROM production --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm TEST_MAIL production --yes --token=${{ secrets.VERCEL_TOKEN }}
          vercel env rm TEST_PASSWORD production --yes --token=${{ secrets.VERCEL_TOKEN }}
      - name: Push environment variable to Vercel
        run: |
          echo -n ${{ secrets.TMDB_API_KEY }} | vercel env add TMDB_API_KEY production --token=${{ secrets.VERCEL_TOKEN }}
          echo -n ${{ secrets.NEXTAUTH_SECRET }} | vercel env add NEXTAUTH_SECRET production --token=${{ secrets.VERCEL_TOKEN }}
          echo -n ${{ secrets.AUTH_REDIRECT_PROXY_URL }} | vercel env add AUTH_REDIRECT_PROXY_URL production --token=${{ secrets.VERCEL_TOKEN }}
          echo -n ${{ secrets.NEXTAUTH_GITHUB_ID }} | vercel env add NEXTAUTH_GITHUB_ID production --token=${{ secrets.VERCEL_TOKEN }}
          echo -n ${{ secrets.NEXTAUTH_GITHUB_SECRET }} | vercel env add NEXTAUTH_GITHUB_SECRET production --token=${{ secrets.VERCEL_TOKEN }}
          echo -n ${{ secrets.TWITCH_ID }} | vercel env add TWITCH_ID production --token=${{ secrets.VERCEL_TOKEN }}
          echo -n ${{ secrets.TWITCH_SECRET }} | vercel env add TWITCH_SECRET production --token=${{ secrets.VERCEL_TOKEN }}
          echo -n ${{ secrets.EMAIL_SERVER_USER }} | vercel env add EMAIL_SERVER_USER production --token=${{ secrets.VERCEL_TOKEN }}
          echo -n ${{ secrets.EMAIL_SERVER_PASSWORD }} | vercel env add EMAIL_SERVER_PASSWORD production --token=${{ secrets.VERCEL_TOKEN }}
          echo -n ${{ secrets.EMAIL_SERVER_HOST }} | vercel env add EMAIL_SERVER_HOST production --token=${{ secrets.VERCEL_TOKEN }}
          echo -n ${{ secrets.EMAIL_SERVER_PORT }} | vercel env add EMAIL_SERVER_PORT production --token=${{ secrets.VERCEL_TOKEN }}
          echo -n ${{ secrets.EMAIL_FROM }} | vercel env add EMAIL_FROM production --token=${{ secrets.VERCEL_TOKEN }}
          echo -n ${{ secrets.TEST_MAIL }} | vercel env add TEST_MAIL production --token=${{ secrets.VERCEL_TOKEN }}
          echo -n ${{ secrets.TEST_PASSWORD }} | vercel env add TEST_PASSWORD production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Pull Vercel Environment Information
        run: vercel env pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Pull Vercel Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: List Vercel Environment Information
        run: vercel env ls --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        env:
          NEXTAUTH_URL: ${{ env.LOCAL_URL }}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
